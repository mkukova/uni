#include <iomanip> 
#include <iostream> 
#include <stdlib.h> 
#include <chrono>
#include <thread>
#include<Windows.h>

using namespace std;
using namespace std::this_thread; // sleep_for, sleep_until
using namespace std::chrono; // nanoseconds, system_clock, seconds

char One[11][10] =
{
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','1' },
};

char Two[11][10] =
{
	{'2','2','2','2','2','2','2','2','2','2' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','2' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','2' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','2' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','2' },
	{'2','2','2','2','2','2','2','2','2','2' },
	{'2',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'2',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'2',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'2',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'2','2','2','2','2','2','2','2','2','2' },
};

char Three[11][10] =
{
	{'3','3','3','3','3','3','3','3','3','3' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','3' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','3' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','3' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','3' },
	{'3','3','3','3','3','3','3','3','3','3' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','3' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','3' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','3' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','3' },
	{'3','3','3','3','3','3','3','3','3','3' },
};

char Four[11][10] =
{
	{'4',' ',' ',' ',' ',' ',' ',' ',' ','4' },
	{'4',' ',' ',' ',' ',' ',' ',' ',' ','4' },
	{'4',' ',' ',' ',' ',' ',' ',' ',' ','4' },
	{'4',' ',' ',' ',' ',' ',' ',' ',' ','4' },
	{'4',' ',' ',' ',' ',' ',' ',' ',' ','4' },
	{'4','4','4','4','4','4','4','4','4','4' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','4' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','4' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','4' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','4' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','4' },
};

char Five[11][10] =
{
	{'5','5','5','5','5','5','5','5','5','5' },
	{'5',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'5',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'5',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'5',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'5','5','5','5','5','5','5','5','5','5' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','5' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','5' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','5' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','5' },
	{'5','5','5','5','5','5','5','5','5','5' },
};

char Six[11][10] =
{
	{'6','6','6','6','6','6','6','6','6','6' },
	{'6',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'6',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'6',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'6',' ',' ',' ',' ',' ',' ',' ',' ',' ' },
	{'6','6','6','6','6','6','6','6','6','6' },
	{'6',' ',' ',' ',' ',' ',' ',' ',' ','6' },
	{'6',' ',' ',' ',' ',' ',' ',' ',' ','6' },
	{'6',' ',' ',' ',' ',' ',' ',' ',' ','6' },
	{'6',' ',' ',' ',' ',' ',' ',' ',' ','6' },
	{'6','6','6','6','6','6','6','6','6','6' },
};

char Seven[11][10] =
{
	{'7','7','7','7','7','7','7','7','7','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','7' },
};

char Eight[11][10] =
{
	{'8','8','8','8','8','8','8','8','8','8' },
	{'8',' ',' ',' ',' ',' ',' ',' ',' ','8' },
	{'8',' ',' ',' ',' ',' ',' ',' ',' ','8' },
	{'8',' ',' ',' ',' ',' ',' ',' ',' ','8' },
	{'8',' ',' ',' ',' ',' ',' ',' ',' ','8' },
	{'8','8','8','8','8','8','8','8','8','8' },
	{'8',' ',' ',' ',' ',' ',' ',' ',' ','8' },
	{'8',' ',' ',' ',' ',' ',' ',' ',' ','8' },
	{'8',' ',' ',' ',' ',' ',' ',' ',' ','8' },
	{'8',' ',' ',' ',' ',' ',' ',' ',' ','8' },
	{'8','8','8','8','8','8','8','8','8','8' },
};

char Nine[11][10] =
{
	{'9','9','9','9','9','9','9','9','9','9' },
	{'9',' ',' ',' ',' ',' ',' ',' ',' ','9' },
	{'9',' ',' ',' ',' ',' ',' ',' ',' ','9' },
	{'9',' ',' ',' ',' ',' ',' ',' ',' ','9' },
	{'9',' ',' ',' ',' ',' ',' ',' ',' ','9' },
	{'9','9','9','9','9','9','9','9','9','9' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','9' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','9' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','9' },
	{' ',' ',' ',' ',' ',' ',' ',' ',' ','9' },
	{'9','9','9','9','9','9','9','9','9','9'},
};

char Zero[11][10] =
{
	{'0','0','0','0','0','0','0','0','0','0' },
	{'0',' ',' ',' ',' ',' ',' ',' ',' ','0' },
	{'0',' ',' ',' ',' ',' ',' ',' ',' ','0' },
	{'0',' ',' ',' ',' ',' ',' ',' ',' ','0' },
	{'0',' ',' ',' ',' ',' ',' ',' ',' ','0' },
	{'0',' ',' ',' ',' ',' ',' ',' ',' ','0' },
	{'0',' ',' ',' ',' ',' ',' ',' ',' ','0' },
	{'0',' ',' ',' ',' ',' ',' ',' ',' ','0' },
	{'0',' ',' ',' ',' ',' ',' ',' ',' ','0' },
	{'0',' ',' ',' ',' ',' ',' ',' ',' ','0' },
	{'0','0','0','0','0','0','0','0','0','0' }
};

void Draw(int digits[5])
{
	for (int i = 0; i < 11; i++)
	{
		for (int n = 0; n < 5; n++)
		{
			switch (digits[n])
			{
			case 1:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << One[i][j];
				}
				break;
			}
			case 2:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << Two[i][j];
				}
				break;
			}
			case 3:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << Three[i][j];
				}
				break;
			}
			case 4:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << Four[i][j];
				}
				break;
			}
			case 5:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << Five[i][j];
				}
				break;
			}
			case 6:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << Six[i][j];
				}
				break;
			}
			case 7:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << Seven[i][j];
				}
				break;
			}
			case 8:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << Eight[i][j];
				}
				break;
			}
			case 9:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << Nine[i][j];
				}
				break;
			}
			default:
			{
				for (int j = 0; j < 10; j++)
				{
					cout << Zero[i][j];
				}
				break;
			}
			}

			if (n==2 && (i==3 || i==4 || i == 6 || i==7))
			{
				cout <<"  "<< (char)178 <<"  ";
			}
			else
			{
				cout << "     ";
			}
		}
		cout << endl;
	}
}

void Digits(int min, int sec, int digits[5])
{
	digits[2] = min % 10;
	digits[1] = (min / 10) % 10;
	digits[0] = (min / 100) % 10;
	digits[4] = sec % 10;
	digits[3] = (sec / 10) % 10;
}

void Timer(int timerSeconds)
{
	int min, sec;
	min = timerSeconds / 60;
	sec = timerSeconds % 60;

	int digits[5] = { 0,0,0,0,0 };

	do
	{
		system("CLS");
		Digits(min, sec, digits);
		Draw(digits);
		sec--;
		if (sec == 0 && min > 0)
		{
			min--;
			sec = 59;
		}

		sleep_for(nanoseconds(10));
		sleep_until(system_clock::now() + seconds(1));
	} while (sec != -1 || min != 0);

	Beep(500, 1000);
	system("CLS");
	cout << "Time's up!";
}

int main()
{
	int timerSeconds;
	//checks for valid input
	do
	{
		cout << "Enter seconds in range [1, 9999]: ";
		cin >> timerSeconds;
	} while (timerSeconds < 0 || timerSeconds>9999);
	
	Timer(timerSeconds);
	
	return 0;
}


